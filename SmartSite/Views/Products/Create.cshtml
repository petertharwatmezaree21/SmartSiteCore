@model SmartSite.Models.Product

@{ ViewBag.Title = "Create"; }



@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken() <!-- Contact Form -->
                <div class="contact-form-area m-top-30 d-flex justify-content-center" style="width:50%;margin-left:25%">
                    <div class="row d-flex justify-content-center">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="col-lg-12 col-md-12 ">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12 col-md-12 ">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12 col-md-12 ">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @*@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })*@
                                    <input type="file" name="UploadImg" accept="image/*" />
                                    <span class="text-danger">
                                        @ViewBag.Message
                                    </span>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12 col-md-12 ">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PdfFile, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input type="file" name="UploadPdf" accept="application/pdf" />
                                    <span class="text-danger">
                                        @ViewBag.Message
                                    </span>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12 col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12 col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductTypeID, "ProductTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("ProductTypeID", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProductTypeID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-12">
                            <div class="form-group button">
                                <button type="submit" class="bizwheel-btn theme-2 ">Create</button>
                            </div>
                        </div>
                        <div class="form-group button">
                            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-info form-control" })
                        </div>
                    </div>
                </div> <!--/ End contact Form -->
}


@section Scripts{

    <script src="~/js/jquery.validate.js"></script>
    <script src="~/js/jquery.validate.unobtrusive.js"></script>
}
<!-- editor textarea -->
<script src="https://cdn.ckeditor.com/4.14.1/basic/ckeditor.js"></script>

<script>CKEDITOR.replace('Description');</script>
